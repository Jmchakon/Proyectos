openapi: 3.0.3
info:
  title: API Sistema de Reservas - Usuarios
  description: API para gestión de usuarios en el sistema de reservas
  version: "1.0.0"
servers:
  - url: http://localhost:8080
    description: Servidor local de desarrollo

paths:
  /usuarios:
    post:
      summary: Crear un nuevo usuario
      requestBody:
        description: Datos del usuario a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '200':
          description: Usuario creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Error en la solicitud

    get:
      summary: Listar todos los usuarios
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'

  /usuarios/{id}:
    get:
      summary: Obtener un usuario por ID
      parameters:
        - name: id
          in: path
          description: ID del usuario
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuario no encontrado

    put:
      summary: Actualizar un usuario existente
      parameters:
        - name: id
          in: path
          description: ID del usuario a actualizar
          required: true
          schema:
            type: integer
      requestBody:
        description: Datos para actualizar el usuario
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '200':
          description: Usuario actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuario no encontrado

    delete:
      summary: Eliminar un usuario por ID
      parameters:
        - name: id
          in: path
          description: ID del usuario a eliminar
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Usuario eliminado correctamente
        '404':
          description: Usuario no encontrado

components:
  schemas:
    Usuario:
      type: object
      properties:
        idUsuario:
          type: integer
          example: 1
        nombreCompleto:
          type: string
          example: Juan Perez
        numTelefono:
          type: integer
          example: 123456789
        email:
          type: string
          format: email
          example: juan.perez@example.com
        role:
          type: string
          enum:
            - ADMIN
            - USER
          example: USER
        password:
          type: string
          example: "password123"
        reservas:
          type: array
          items:
            $ref: '#/components/schemas/Reserva'

    Reserva:
      type: object
      # Como no pasaste detalles de Reserva, la dejo vacía o con lo básico:
      properties:
        idReserva:
          type: integer
          example: 10
        # Puedes completar según tu entidad Reserva
