openapi: 3.0.3
info:
  title: API Sistema de Reservas
  description: API para gesti√≥n de usuarios, reservas, recursos y pagos
  version: "1.0.0"

servers:
  - url: http://localhost:8080
    description: Servidor local de desarrollo

paths:
  /usuarios:
    get:
      summary: Listar todos los usuarios
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'

    post:
      summary: Crear un nuevo usuario
      requestBody:
        description: Datos del usuario a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '200':
          description: Usuario creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'

  /usuarios/{id}:
    get:
      summary: Obtener un usuario por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'

    put:
      summary: Actualizar un usuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '200':
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'

    delete:
      summary: Eliminar un usuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Usuario eliminado

  /reservas:
    get:
      summary: Listar todas las reservas
      responses:
        '200':
          description: Lista de reservas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reserva'

    post:
      summary: Crear una nueva reserva
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reserva'
      responses:
        '200':
          description: Reserva creada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reserva'

  /reservas/{id}:
    get:
      summary: Obtener una reserva por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Reserva encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reserva'

    put:
      summary: Actualizar una reserva
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reserva'
      responses:
        '200':
          description: Reserva actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reserva'

    delete:
      summary: Eliminar una reserva
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Reserva eliminada

components:
  schemas:
    Usuario:
      type: object
      properties:
        idUsuario:
          type: integer
        nombreCompleto:
          type: string
        numTelefono:
          type: integer
        email:
          type: string
          format: email
        role:
          type: string
          enum: [ADMIN, USER]
        password:
          type: string
        reservas:
          type: array
          items:
            $ref: '#/components/schemas/Reserva'

    Reserva:
      type: object
      properties:
        idReserva:
          type: integer
        usuario:
          $ref: '#/components/schemas/Usuario'
        recursos:
          type: array
          items:
            $ref: '#/components/schemas/Recurso'
        fechaInicio:
          type: string
          format: date-time
        fechaFin:
          type: string
          format: date-time
        estadoReservacion:
          type: string
        pago:
          type: array
          items:
            $ref: '#/components/schemas/Pago'

    Pago:
      type: object
      properties:
        idPago:
          type: integer
        monto:
          type: number
          format: double
        fechaPago:
          type: string
          format: date-time
        metodoPago:
          type: string
        estadoPago:
          type: string
        referenciaPago:
          type: string
        reserva:
          $ref: '#/components/schemas/Reserva'
        usuario:
          $ref: '#/components/schemas/Usuario'

    Recurso:
      type: object
      properties:
        idRecurso:
          type: integer
        tipoDeRecurso:
          type: string
        reservas:
          type: array
          items:
            $ref: '#/components/schemas/Reserva'
        precio:
          type: number
          format: double
        nombre:
          type: string
